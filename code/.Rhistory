get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE",2)
get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE for Order 1",2)
get_ate_se_clusteredci(design1.regr_mod1, "Model 1: simple: ATE",2)
get_ate_se_clusteredci(design1.regr_mod2, "Model 2: add covariates: ATE",2)
get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE",2)
get_ate_se_clusteredci(design1.regr_mod4, "Model 3: add order term: ATE for Order 1",2)
get_ate_se_clusteredci(design1.regr_mod1, "Model 1: simple: ATE",2)
get_ate_se_clusteredci(design1.regr_mod2, "Model 2: add covariates: ATE",2)
get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE",2)
get_ate_se_clusteredci(design1.regr_mod4, "Model 4: add order term: ATE for Order 1",2)
design1.regr_mod4
design1.regr_mod4
design1.regr_mod4
summary(design1.regr_mod4
)
summary(glht(design1.regr_mod4 , vcov=vcovHC(design1.regr_mod4),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1))))
library(multcomp)
summary(glht(design1.regr_mod4 , vcov=vcovHC(design1.regr_mod4),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1))))
summary(glht(design1.regr_mod4 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod4, ~cluster)),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1))))
summary(glht(design1.regr_mod4 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod4, ~cluster),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1))))
dum = summary(glht(design1.regr_mod4 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod4, ~cluster),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1))))
dum
dum$coef
dum$coef[2]
dum$df[2]
dum
dum$df
dum$test
dum$linfct
dum
dum$coef[2]
dum$coef[2,2]
dum
dum$alternative
dum$type
dum[1]
dum[2]
dum[3]
dum[4]
dum
dum["test"]
dum
dum["test"][1]
dum["test"][[1]]
dum["test"]
dum["test"][[2]]
dum["test"][[1]]
dum$coefficients
dum$sigma
dum["test"]$coefficients
glht(mod,
vcov=multiwayvcov::cluster.vcov(mod, ~cluster),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1)))
mod = design1.regr_mod4
glht(mod,
vcov=multiwayvcov::cluster.vcov(mod, ~cluster),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1)))
dum = glht(mod,
vcov=multiwayvcov::cluster.vcov(mod, ~cluster),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1)))
dum
dum$coef
dum
summary(dum)
get_ate_se_clusteredci(design1.regr_mod1, "Model 1: simple: ATE",2)
get_ate_se_clusteredci(design1.regr_mod2, "Model 2: add covariates: ATE",2)
get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE",2)
get_ate_se_clusteredci(design1.regr_mod4, "Model 4: add order term: ATE for Order 2",2)
cat("Model 4: add order term: ATE for Order 1")
get_ate_se_clusteredci(design1.regr_mod1, "Model 1: simple: ATE",2)
get_ate_se_clusteredci(design1.regr_mod2, "Model 2: add covariates: ATE",2)
get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE",2)
get_ate_se_clusteredci(design1.regr_mod4, "Model 4: add order term: ATE for Order 2",2)
cat("\nModel 4: add order term: ATE for Order 1")
get_ate_se_clusteredci(design1.regr_mod1, "Model 1: simple: ATE",2)
get_ate_se_clusteredci(design1.regr_mod2, "Model 2: add covariates: ATE",2)
get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE",2)
get_ate_se_clusteredci(design1.regr_mod4, "Model 4: add order term: ATE for Order 2",2)
cat("\n Model 4: add order term: ATE for Order 1")
summary(glht(design1.regr_mod4 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod4, ~cluster),
linfct=rbind("ATE for Order 1"=c(0,1,0,0,0,0,0,0,1))))
design1.regr_mod4$df.residual
summary(design1.regr_mod4)$df[2]
design1.mode4.order2.df = summary(design1.regr_mod4)$df[2]
t.stat = qt(p = 0.975, df = design1.mode4.order2.df, lower.tail = TRUE)
design1.mode4.order2.ate.ci = c(0.8423-t.stat*0.2517, 0.8423+t.stat*0.2517)
cat("\n Model 4: add order term: ATE for Order 1")
cat("\nestimated average causal effect = $",0.8423)
cat("\nClustered standard errors =",0.2517)
cat("\n.95 CI with clustered SE = [",design1.mode4.order2.ate.ci,"]")
cat("\np-value =",0.000857)
get_ate_se_clusteredci(design1.regr_mod1, "Model 1: simple: ATE",2)
get_ate_se_clusteredci(design1.regr_mod2, "Model 2: add covariates: ATE",2)
get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE",2)
get_ate_se_clusteredci(design1.regr_mod4, "Model 4: add order term: ATE for Order 2",2)
design1.mode4.order2.df = summary(design1.regr_mod4)$df[2]
t.stat = qt(p = 0.975, df = design1.mode4.order2.df, lower.tail = TRUE)
design1.mode4.order2.ate.ci = c(0.8423-t.stat*0.2517, 0.8423+t.stat*0.2517)
cat("\n Model 4: add order term: ATE for Order 1")
cat("\nestimated average causal effect = $",0.8423)
cat("\nClustered standard errors =",0.2517)
cat("\n.95 CI with clustered SE = [",design1.mode4.order2.ate.ci,"]")
cat("\np-value =",0.000857)
summary(design1.regr_mod5)
summary(glht(design1.regr_mod5 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster),
linfct=rbind("ATE for Order 1"=c(0,1,0,0,0,0,0,0,1,1))))
design1.mode4.order1.df = summary(design1.regr_mod4)$df[2]
t.stat = qt(p = 0.975, df = design1.mode4.order1.df, lower.tail = TRUE)
design1.mode4.order1.ate.ci = c(0.8423-t.stat*0.2517, 0.8423+t.stat*0.2517)
cat("\n Model 4: add order term: ATE for Order 1")
cat("\nestimated average causal effect = $",0.8423)
cat("\nClustered standard errors =",0.2517)
cat("\n.95 CI with clustered SE = [",design1.mode4.order1.ate.ci,"]")
cat("\np-value =",0.000857)
get_ate_se_clusteredci(design1.regr_mod1, "Model 1: simple: ATE",2)
get_ate_se_clusteredci(design1.regr_mod2, "Model 2: add covariates: ATE",2)
get_ate_se_clusteredci(design1.regr_mod3, "Model 3: add order term: ATE",2)
design1.mode4.order1.df = summary(design1.regr_mod4)$df[2]
t.stat = qt(p = 0.975, df = design1.mode4.order1.df, lower.tail = TRUE)
design1.mode4.order1.ate.ci = c(0.8423-t.stat*0.2517, 0.8423+t.stat*0.2517)
cat("\n Model 4: add order term: ATE for Order 1")
cat("\nestimated average causal effect = $",0.8423)
cat("\nClustered standard errors =",0.2517)
cat("\n.95 CI with clustered SE = [",design1.mode4.order1.ate.ci,"]")
cat("\np-value =",0.000857)
get_ate_se_clusteredci(design1.regr_mod4, "Model 4: add order term: ATE for Order 2",2)
# model 5 order 1
design1.mode5.order1.df = summary(design1.regr_mod5)$df[2]
t.stat = qt(p = 0.975, df = design1.mode5.order1.df, lower.tail = TRUE)
design1.mode4.order2.ate.ci = c(0.3873-t.stat*0.4203, 0.3873+t.stat*0.4203)
cat("\n Model 5: add order term: ATE for Order 1 (derived using Simultaneous Tests for General Linear Hypotheses)")
cat("\nestimated average causal effect = $",0.3873)
cat("\nClustered standard errors =",0.4203)
cat("\n.95 CI with clustered SE = [",design1.mode4.order2.ate.ci,"]")
cat("\np-value =",0.357)
# model 5 order 1
summary(glht(design1.regr_mod5 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster),
linfct=rbind("ATE for Order 1"=c(0,1,0,0,0,0,0,0,1,0))))
# model 5 order 1
summary(glht(design1.regr_mod5 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1,0))))
# model 5 order 2
design1.mode5.order1.df = summary(design1.regr_mod5)$df[2]
t.stat = qt(p = 0.975, df = design1.mode5.order1.df, lower.tail = TRUE)
design1.mode4.order2.ate.ci = c(-0.7099-t.stat*0.4201, -0.7099+t.stat*0.4201)
cat("\n Model 5: add order term: ATE for Order 2 (derived using Simultaneous Tests for General Linear Hypotheses)")
cat("\nestimated average causal effect = $",-0.7099)
cat("\nClustered standard errors =",0.4201)
cat("\n.95 CI with clustered SE = [",design1.mode4.order2.ate.ci,"]")
cat("\np-value =",0.0914)
# model 5 order 1
design1.mode5.order1.df = summary(design1.regr_mod5)$df[2]
t.stat = qt(p = 0.975, df = design1.mode5.order1.df, lower.tail = TRUE)
design1.mode5.order1.ate.ci = c(0.3873-t.stat*0.4203, 0.3873+t.stat*0.4203)
cat("\n Model 5: add order term: ATE for Order 1 \n(derived using Simultaneous Tests for General Linear Hypotheses)")
cat("\nestimated average causal effect = $",0.3873)
cat("\nClustered standard errors =",0.4203)
cat("\n.95 CI with clustered SE = [",design1.mode5.order1.ate.ci,"]")
cat("\np-value =",0.357)
# model 5 order 2
design1.mode5.order1.df = summary(design1.regr_mod5)$df[2]
t.stat = qt(p = 0.975, df = design1.mode5.order1.df, lower.tail = TRUE)
design1.mode5.order2.ate.ci = c(-0.7099-t.stat*0.4201, -0.7099+t.stat*0.4201)
cat("\n Model 5: add order term: ATE for Order 2 \n(derived using Simultaneous Tests for General Linear Hypotheses)")
cat("\nestimated average causal effect = $",-0.7099)
cat("\nClustered standard errors =",0.4201)
cat("\n.95 CI with clustered SE = [",design1.mode5.order2.ate.ci,"]")
cat("\np-value =",0.0914)
# TODO Feel free to add to the analysis interpretation below.
# Also, a regression table should be added.
est.regr.simple(regr_table_d1)
est.regr.covars(regr_table_d1)
est.regr.covars_order(regr_table_d1)
est.regr.covars_order_interact(regr_table_d1)
# below was failing for some reason. also, why are we looking at this data and excluding 0.1?
# est.regr.simple(regr_table_d1_exclude0.10) # ATE = 0.23
# est.regr.covars(regr_table_d1_exclude0.10) # ATE = 0.20
lmtest::coeftest(design1.regr_mod2, vcov = multiwayvcov::cluster.vcov(mod, ~cluster))
lmtest::coeftest(design1.regr_mod2, vcov = vcovHC)
lmtest::coeftest(design1.regr_mod2, vcov(design1.regr_mod2))
se.design1.regr_mod2
lmtest::coeftest(design1.regr_mod1, vcov = multiwayvcov::cluster.vcov(design1.regr_mod1, ~cluster))[ , "Std. Error"]
lmtest::coeftest(design1.regr_mod1, vcov = multiwayvcov::cluster.vcov(design1.regr_mod1, ~cluster))
se.design1.regr_mod1
design1.regr_mod5
regr_table_d1$cluster
summary(regr_table_d1$cluster )
0.05/7
0.000857 > 0.05/7
?glm
mod = design1.regr_mod5
(se.design1.regr_mod5 = lmtest::coeftest(design1.regr_mod5, vcov = multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster))[ , "Std. Error"])
lmtest::coeftest(design1.regr_mod5, vcov = multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster))
lmtest::coeftest(design1.regr_mod5, vcov = multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster))[8,]
cat("\nModel 4 inference for coefficient covariate Order 1:\n")
lmtest::coeftest(design1.regr_mod5, vcov = multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster))[8,]
# Also, a regression table should be added.
regr_table_d1$cluster = as.factor(regr_table_d1$treatment + regr_table_d1$order1)
# write function to take in model, return clustered SE
design1.regr_mod1 = lm(accuracy ~ treatment, data = regr_table_d1)
design1.regr_mod2 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3, data = regr_table_d1)
design1.regr_mod3 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3 + order1, data = regr_table_d1)
design1.regr_mod4 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3 + order1 + order1*treatment, data = regr_table_d1)
design1.regr_mod5 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3 + order1 + order1*treatment + I(treatment^2), data = regr_table_d1)
design1.regr_mod6 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3 + order1 + order1*treatment
+ order1*CQ1 + order1*CQ2_3 + order1*CQ3, data = regr_table_d1)
(se.design1.regr_mod1 = lmtest::coeftest(design1.regr_mod1, vcov = multiwayvcov::cluster.vcov(design1.regr_mod1, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod2 = lmtest::coeftest(design1.regr_mod2, vcov = multiwayvcov::cluster.vcov(design1.regr_mod2, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod3 = lmtest::coeftest(design1.regr_mod3, vcov = multiwayvcov::cluster.vcov(design1.regr_mod3, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod4 = lmtest::coeftest(design1.regr_mod4, vcov = multiwayvcov::cluster.vcov(design1.regr_mod4, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod5 = lmtest::coeftest(design1.regr_mod5, vcov = multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod6 = lmtest::coeftest(design1.regr_mod6, vcov = multiwayvcov::cluster.vcov(design1.regr_mod6, ~cluster))[ , "Std. Error"])
design1.tab = stargazer::stargazer(design1.regr_mod1,
design1.regr_mod2,
design1.regr_mod3,
design1.regr_mod4,
design1.regr_mod5,
design1.regr_mod6,
type = "text", title = "Design 1 Main ATE Estimation", style = "default",
se = list(se.design1.regr_mod1,
se.design1.regr_mod2,
se.design1.regr_mod3,
se.design1.regr_mod4,
se.design1.regr_mod5,
se.design1.regr_mod6),
star.cutoffs = c(0.05, 0.01, 0.001),
column.labels = c("simple","+ covariates","+ order","+ interaction","+ 2nd order","+ cov interaction"),
model.names = F,
float.env = "sidewaystable"
)
cat("\nModel 4 inference for coefficient covariate Order 1:\n")
lmtest::coeftest(design1.regr_mod5, vcov = multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster))[8,]
# model 5 order 2
design1.mode5.order2.df = summary(design1.regr_mod5)$df[2]
t.stat = qt(p = 0.975, df = design1.mode5.order2.df, lower.tail = TRUE)
design1.mode5.order2.ate.ci = c(-0.7099-t.stat*0.4201, -0.7099+t.stat*0.4201)
cat("\n Model 5: add second order term: ATE for Order 2 \n(derived using Simultaneous Tests for General Linear Hypotheses)")
cat("estimated average causal effect = $",-0.7099)
cat("Clustered standard errors =",0.4201)
cat(".95 CI with clustered SE = [",design1.mode5.order2.ate.ci,"]")
cat("p-value =",0.0914)
# model 5 order 2
design1.mode5.order2.df = summary(design1.regr_mod5)$df[2]
t.stat = qt(p = 0.975, df = design1.mode5.order2.df, lower.tail = TRUE)
design1.mode5.order2.ate.ci = c(-0.7099-t.stat*0.4201, -0.7099+t.stat*0.4201)
cat("\n Model 5: add second order term: ATE for Order 2 \n(derived using Simultaneous Tests for General Linear Hypotheses)")
cat("estimated average causal effect = $",-0.7099)
cat("Clustered standard errors =",0.4201)
cat(".95 CI with clustered SE = [",design1.mode5.order2.ate.ci,"]")
cat("p-value =",0.0914)
summary(design1.regr_mod6)
length(design1.regr_mod6$coefficients)
# model 6 order 1
summary(glht(design1.regr_mod6 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod6, ~cluster),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1,0,0,0,0,0))))
# model 6 order 1
design1.mode6.order1.df = summary(design1.regr_mod6)$df[2]
t.stat = qt(p = 0.975, df = design1.mode6.order1.df, lower.tail = TRUE)
design1.mode6.order1.ate.ci = c(0.8269-t.stat*0.2482, 0.8269+t.stat*0.2482)
cat("\n Model 6: add treatment-covariate interaction: ATE for Order 1 \n(derived using Simultaneous Tests for General Linear Hypotheses)")
cat("estimated average causal effect = $",0.8269)
cat("Clustered standard errors =",0.2482)
cat(".95 CI with clustered SE = [",design1.mode6.order1.ate.ci,"]")
cat("p-value =",0.000904)
# model 6 order 2
get_ate_se_clusteredci(design1.regr_mod6, "Model 3: add Order indicator: ATE",2)
# model 6 order 2
get_ate_se_clusteredci(design1.regr_mod6, "Model 6: add treatment-covariate interaction: ATE for Order 2",2)
summary(design1.regr_mod6)
summary(regr_table_d1$CQ1)
# Also, a regression table should be added.
regr_table_d1$cluster = as.factor(regr_table_d1$treatment + regr_table_d1$order1)
# write function to take in model, return clustered SE
design1.regr_mod1 = lm(accuracy ~ treatment, data = regr_table_d1)
design1.regr_mod2 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3, data = regr_table_d1)
design1.regr_mod3 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3 + order1, data = regr_table_d1)
design1.regr_mod4 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3 + order1 + order1*treatment, data = regr_table_d1)
design1.regr_mod5 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3 + order1 + order1*treatment + I(treatment^2), data = regr_table_d1)
design1.regr_mod6 = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3 + order1 + order1*treatment
+ treatment*CQ1 + treatment*CQ2_3 + treatment*CQ3, data = regr_table_d1)
(se.design1.regr_mod1 = lmtest::coeftest(design1.regr_mod1, vcov = multiwayvcov::cluster.vcov(design1.regr_mod1, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod2 = lmtest::coeftest(design1.regr_mod2, vcov = multiwayvcov::cluster.vcov(design1.regr_mod2, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod3 = lmtest::coeftest(design1.regr_mod3, vcov = multiwayvcov::cluster.vcov(design1.regr_mod3, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod4 = lmtest::coeftest(design1.regr_mod4, vcov = multiwayvcov::cluster.vcov(design1.regr_mod4, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod5 = lmtest::coeftest(design1.regr_mod5, vcov = multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster))[ , "Std. Error"])
(se.design1.regr_mod6 = lmtest::coeftest(design1.regr_mod6, vcov = multiwayvcov::cluster.vcov(design1.regr_mod6, ~cluster))[ , "Std. Error"])
design1.tab = stargazer::stargazer(design1.regr_mod1,
design1.regr_mod2,
design1.regr_mod3,
design1.regr_mod4,
design1.regr_mod5,
design1.regr_mod6,
type = "text", title = "Design 1 Main ATE Estimation", style = "default",
se = list(se.design1.regr_mod1,
se.design1.regr_mod2,
se.design1.regr_mod3,
se.design1.regr_mod4,
se.design1.regr_mod5,
se.design1.regr_mod6),
star.cutoffs = c(0.05, 0.01, 0.001),
column.labels = c("simple","+ covariates","+ order","+ interaction","+ 2nd order","+ cov interaction"),
model.names = F,
float.env = "sidewaystable"
)
# model 6 order 1
summary(glht(design1.regr_mod6 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod6, ~cluster),
linfct=rbind("ATE for Order 2"=c(0,1,0,0,0,0,0,0,1,0,0,0,0,0))))
# model 6 order 1
design1.mode6.order1.df = summary(design1.regr_mod6)$df[2]
t.stat = qt(p = 0.975, df = design1.mode6.order1.df, lower.tail = TRUE)
design1.mode6.order1.ate.ci = c(1.3364-t.stat*0.3467, 1.3364+t.stat*0.3467)
cat("\n Model 6: add treatment-covariate interaction: ATE for Order 1 \n(derived using Simultaneous Tests for General Linear Hypotheses)")
cat("estimated average causal effect = $",1.3364)
cat("Clustered standard errors =",0.3467)
cat(".95 CI with clustered SE = [",design1.mode6.order1.ate.ci,"]")
cat("p-value =",0.000125)
summary(design1.regr_mod6)
summary(design1.regr_mod6)
summaryregr_table_d1$CQ1)
summary(regr_table_d1$CQ1)
# model 6 order 1
summary(regr_table_d1$CQ1)
summary(regr_table_d1$CQ2_3)
summary(regr_table_d1$CQ3)
summary(glht(design1.regr_mod6 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod6, ~cluster),
linfct=rbind("ATE for Order 1"=c(0,1,0,0,0,0,0,0,1,0,0,0,0,0))))
# model 6 order 1
summary(regr_table_d1$CQ1)
summary(regr_table_d1$CQ2_3)
summary(regr_table_d1$CQ3)
summary(glht(design1.regr_mod6 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod6, ~cluster),
linfct=rbind("ATE for Order 1"=c(0,1,0,0,0,0,0,0,1,0,1,1.796,0,1))))
# model 6 order 2
summary(regr_table_d1$CQ1)
summary(regr_table_d1$CQ2_3)
summary(regr_table_d1$CQ3)
# Assume mode or mean for covariates
summary(glht(design1.regr_mod6 , vcov=multiwayvcov::cluster.vcov(design1.regr_mod6, ~cluster),
linfct=rbind("ATE for Order 1"=c(0,1,0,0,0,0,0,0,0,0,1,1.796,0,1))))
# model 6 order 2
design1.mode6.order1.df = summary(design1.regr_mod6)$df[2]
t.stat = qt(p = 0.975, df = design1.mode6.order1.df, lower.tail = TRUE)
design1.mode6.order1.ate.ci = c(-0.2324-t.stat*0.1138, -0.2324+t.stat*0.1138)
cat("\n Model 6: add treatment-covariate interaction: ATE for Order 2 \n(derived using Simultaneous Tests for General Linear Hypotheses)")
cat("estimated average causal effect = $",-0.2324)
cat("Clustered standard errors =",0.1138)
cat(".95 CI with clustered SE = [",design1.mode6.order1.ate.ci,"]")
cat("p-value =",0.0414)
design1.tab = stargazer::stargazer(design1.regr_mod1,
design1.regr_mod2,
design1.regr_mod3,
design1.regr_mod4,
design1.regr_mod5,
design1.regr_mod6,
type = "text", title = "Design 1 Main ATE Estimation", style = "default",
se = list(se.design1.regr_mod1,
se.design1.regr_mod2,
se.design1.regr_mod3,
se.design1.regr_mod4,
se.design1.regr_mod5,
se.design1.regr_mod6),
star.cutoffs = c(0.05, 0.01, 0.001),
column.labels = c("simple","+ covariates","+ order","+ interaction","+ 2nd order","+ cov interaction"),
model.names = F,
float.env = "sidewaystable"
)
0.05/15
0.05/9
cat("\nModel 4 inference for coefficient covariate Order 1:\n")
lmtest::coeftest(design1.regr_mod4, vcov = multiwayvcov::cluster.vcov(design1.regr_mod5, ~cluster))[8,]
cat("\nModel 4 inference for coefficient covariate Order 1:\n")
lmtest::coeftest(design1.regr_mod4, vcov = multiwayvcov::cluster.vcov(design1.regr_mod4, ~cluster))[8,]
plot(allEffects(design1.regr_mod5, default.levels=50))
plot(effects::allEffects(design1.regr_mod5, default.levels=50))
plot(effects::allEffects(design1.regr_mod5, default.levels=50))[2]
plot(effects::allEffects(design1.regr_mod5, default.levels=50)[2])
plot(effects::allEffects(design1.regr_mod5, default.levels=50)[4])
# RANDOMIZATION INFERENCE on separate orders
n10 = nrow(worker_perf_d1o1_0.10)
n25 = nrow(worker_perf_d1o1_0.25)
n40 = nrow(worker_perf_d1o1_0.40)
n55 = nrow(worker_perf_d1o1_0.55)
rand_ass = function() sample(c(rep(0.1,n10),rep(0.25,n25), rep(0.4,n40), rep(0.55,n55)))
# INCLUDING ALL four postings
# treatment = rand_ass()
ate_d1o1 = est.ri.ate(regr_table_d1o1,regr_table_d1o1$treatment)
ate_d1o1
all_ate_d1o1 <- replicate(5000, est.ri.ate(regr_table_d1o1, rand_ass()))
hist(all_ate_d1o1)
# two-tailed p-val, is this correct?
mean(ate_d1o1 < all_ate_d1o1 & -ate_d1o1 > -all_ate_d1o1)
# EXCLUDING $0.10 posting
# treatment = rand_ass()
# ate_d1o1_exclude_0.10 = est.ri.ate(regr_table_d1o1_exclude0.10,regr_table_d1o1_exclude0.10$treatment)
# all_ate_d1o1_exclude_0.10 <- replicate(5000, est.ri.ate(regr_table_d1o1_exclude0.10, rand_ass()))
# hist(all_ate_d1o1_exclude_0.10)
# # two-tailed p-val, is this correct?
# mean(ate_d1o1_exclude_0.10 < all_ate_d1o1_exclude_0.10 & -ate_d1o1_exclude_0.10 > -all_ate_d1o1_exclude_0.10)
# RANDOMIZATION INFERENCE
n10 = nrow(worker_perf_d1o2_0.10)
n25 = nrow(worker_perf_d1o2_0.25)
n40 = nrow(worker_perf_d1o2_0.40)
n55 = nrow(worker_perf_d1o2_0.55)
rand_ass = function() sample(c(rep(0.1,n10),rep(0.25,n25), rep(0.4,n40), rep(0.55,n55)))
# INCLUDING ALL four postings
# treatment = rand_ass()
ate_d1o2 = est.ri.ate(regr_table_d1o2,regr_table_d1o2$treatment)
ate_d1o2
all_ate_d1o2 <- replicate(5000, est.ri.ate(regr_table_d1o2, rand_ass()))
hist(all_ate_d1o2)
# two-tailed p-val, is this correct?
mean(ate_d1o2 < all_ate_d1o2 & -ate_d1o2 > -all_ate_d1o2)
# EXCLUDING $0.10 posting
# treatment = rand_ass()
# ate_d1o2_exclude_0.10 = est.ri.ate(regr_table_d1o2_exclude0.10,regr_table_d1o2_exclude0.10$treatment)
# all_ate_d1o2_exclude_0.10 <- replicate(5000, est.ri.ate(regr_table_d1o2_exclude0.10, rand_ass()))
# hist(all_ate_d1o2_exclude_0.10)
# # two-tailed p-val, is this correct?
# mean(ate_d1o2_exclude_0.10 < all_ate_d1o2_exclude_0.10 & -ate_d1o2_exclude_0.10 > -all_ate_d1o2_exclude_0.10)
View(regr_table_d1)
regr_table_d1[regr_table_d1$cluster == 0.10, cluster]
regr_table_d1[regr_table_d1$cluster == 0.10,]
regr_table_d1$cluster
regr_table_d1[regr_table_d1$cluster == 0.10,]
nrow(regr_table_d1[regr_table_d1$cluster == 0.10,])
71-06+1+36
nrow(regr_table_d1[regr_table_d1$cluster == 1.1,])
nrow(regr_table_d1[regr_table_d1$cluster == 0.1,])
nrow(regr_table_d1[regr_table_d1$cluster == 0.25,])
nrow(regr_table_d1[regr_table_d1$cluster == 1.25,])
nrow(regr_table_d1[regr_table_d1$cluster == 1.4,])
nrow(regr_table_d1[regr_table_d1$cluster == 0.4,])
head(regr_table_d1[regr_table_d1$cluster == 0.25,],5)
head(regr_table_d1[regr_table_d1$cluster == 0.1,],5)
head(regr_table_d1[regr_table_d1$cluster == 1.4,],5)
nrow(regr_table_d1[regr_table_d1$cluster == 1.1,])
nrow(regr_table_d1[regr_table_d1$cluster == 1.25,])
nrow(regr_table_d1[regr_table_d1$cluster == 1.4,])
nrow(regr_table_d1[regr_table_d1$cluster == 1.55,])
nrow(regr_table_d1[regr_table_d1$cluster == 0.1,])
nrow(regr_table_d1[regr_table_d1$cluster == 0.25,])
nrow(regr_table_d1[regr_table_d1$cluster == 0.40,])
nrow(regr_table_d1[regr_table_d1$cluster == 0.55,])
sample(x = c(0.1,0.25,0.4,0.55), size = 4, replace = F)
View(regr_table_d1o1)
clus.ass = sample(x = c(0.1,0.25,0.4,0.55,0.1,0.25,0.4,0.55), size = 4, replace = F)
clus.ass
clus.ass = sample(x = c(0.1,0.25,0.4,0.55,0.1,0.25,0.4,0.55), size = 8, replace = F)
clus.ass
nrow(regr_table_d1)
rand_ass = function() {
c = sample(x = c(0.1,0.25,0.4,0.55,0.1,0.25,0.4,0.55), size = 8, replace = F)
c(rep(c[1],102),rep(c[2],103),rep(c[3],102),rep(c[4],98),rep(c[5],102),rep(c[6],102),rep(c[7],105),rep(c[8],103))
}
dum = rand_ass()
nrow(dum)
length(dum)
regr_table
regr_table_d1
lmtest::coeftest(mod, vcov = multiwayvcov::cluster.vcov(mod, ~cluster))
lmtest::coeftest(mod, vcov = multiwayvcov::cluster.vcov(mod, ~cluster))]
lmtest::coeftest(mod, vcov = multiwayvcov::cluster.vcov(mod, ~cluster))
lmtest::coeftest(mod, vcov = multiwayvcov::cluster.vcov(mod, ~cluster))[2]
est.ri.ate = function(d, treatment){
d$treatment_new = treatment
m1 = lm(accuracy ~ treatment_new, data =d)
ate = lmtest::coeftest(m1, vcov=multiwayvcov::cluster.vcov(m1, ~cluster))[2]
return(ate)
}
est.ri.ate.control = function(d, treatment){
d$treatment_new = treatment
m1 = lm(accuracy ~ treatment_new + CQ1 + CQ2_3 + CQ3 + order1, data =d)
ate = lmtest::coeftest(m1, vcov=multiwayvcov::cluster.vcov(m1, ~cluster))[2]
return(ate)
}
est.ri.ate = function(d, treatment_new){
m1 = lm(d$accuracy ~ treatment_new)
ate = lmtest::coeftest(m1, vcov=multiwayvcov::cluster.vcov(m1, ~cluster))[2]
return(ate)
}
est.ri.ate.control = function(d, treatment_new){
m1 = lm(d$accuracy ~ treatment_new + d$CQ1 + d$CQ2_3 + d$CQ3 + d$order1, data =d)
ate = lmtest::coeftest(m1, vcov=multiwayvcov::cluster.vcov(m1, ~cluster))[2]
return(ate)
}
ate_d1 = est.ri.ate(regr_table_d1,regr_table_d1$treatment)
regr_table_d1
ate_d1 = est.ri.ate(d=regr_table_d1,treatment_new = regr_table_d1$treatment)
d1 = regr_table_d1
est.ri.ate = function(treatment_new){
d1 = regr_table_d1
m1 = lm(accuracy ~ treatment_new, data=d1)
ate = lmtest::coeftest(m1, vcov=multiwayvcov::cluster.vcov(m1, ~cluster))[2]
return(ate)
}
est.ri.ate.control = function(treatment_new){
d1 = regr_table_d1
m1 = lm(accuracy ~ treatment_new + d1$CQ1 + d1$CQ2_3 + d1$CQ3 + d1$order1, data =d1)
ate = lmtest::coeftest(m1, vcov=multiwayvcov::cluster.vcov(m1, ~cluster))[2]
return(ate)
}
ate_d1 = est.ri.ate(d=regr_table_d1,treatment_new = regr_table_d1$treatment)
ate_d1 = est.ri.ate(treatment_new = regr_table_d1$treatment)
regr_table_d1$treatment.
regr_table_d1$treatment
ate_d1 = est.ri.ate(treatment_new = regr_table_d1$treatment)
all_ate_d1 <- replicate(5000, est.ri.ate(rand_ass()))
