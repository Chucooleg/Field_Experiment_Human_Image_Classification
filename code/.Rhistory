lmtest::coeftest(regr, vcov(regr.sqord))
plot(allEffects(regr.sqord, default.levels=50))
plot(allEffects(regr.sqord, default.levels=50))
regr.sqord = lm(accuracy ~ I(treatment^2) + CQ1 + CQ2_3 + CQ3, data = regr_table)
lmtest::coeftest(regr, vcov(regr.sqord))
regr.sqord = lm(accuracy ~ I(treatment^2) + CQ1 + CQ2_3 + CQ3, data = regr_table)
regr.sqord
regr.sqord = lm(accuracy ~ treament + I(treatment^2) + CQ1 + CQ2_3 + CQ3, data = regr_table)
regr.sqord = lm(accuracy ~ treatment + I(treatment^2) + CQ1 + CQ2_3 + CQ3, data = regr_table)
lmtest::coeftest(regr, vcov(regr.sqord))
regr.sqord
plot(allEffects(regr.sqord, default.levels=50))
lmtest::coeftest(regr, vcov(regr.sqord))
regr.sqord = lm(accuracy ~ treatment + I(treatment^2) + CQ1 + CQ2_3 + CQ3, data = regr_table)
lmtest::coeftest(regr, vcov(regr.sqord))
plot(allEffects(regr.sqord, default.levels=50))
plot(allEffects(regr.sqord, default.levels=50))
regr.sqord$coefficients
regr.dum = lm(accuracy ~ treatment + CQ1 + CQ2_3 + CQ3, data = regr_table)
regr.dum$coefficients
summary(regr.dum)
summary(regr.sqord)
regr.cubedord = lm(accuracy ~ treatment + I(treatment^2) + I(treatment^3) + CQ1 + CQ2_3 + CQ3, data = regr_table)
summary(regr.cubedord)
lmtest::coeftest(regr, vcov(regr.cubedord)) #the coefficient for "treatment" here is wrong", but SE is correct
plot(allEffects(regr.cubedord, default.levels=50))
regr.sqord = lm(accuracy ~ treatment + I(treatment^2) + CQ1 + CQ2_3 + CQ3, data = regr_table)
summary(regr.sqord)
rm(list = ls())
# load supporting functions
# setwd("/home/fred/Field_Experiment_Human_Image_Classification/code")
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
#---------------------------------------------------------------------#
# read in qualtric output csv
dummy_design2_qualtric_data_path = "20171120_qualtric_results_sample_dummy.csv"
dummy_design2_task_data = get_current_task_data(qualtric_data_path_0.40)
dummy_design2_task_data = get_current_task_data(dummy_design2_qualtric_data_path)
dummy_design2_qualtric_data_path = "../qualtric_data/dummy_design2_qualtric_data_path.csv"
dummy_design2_task_data = get_current_task_data(dummy_design2_qualtric_data_path)
lts_sample_dummy.csv"
dummy_design2_task_data = get_current_task_data(dummy_design2_qualtric_data_path)
dummy_design2_task_data
dummy_design2_task_data
get_current_task_data(dummy_design2_qualtric_data_path)
dummy_design2_qualtric_data_path = "../qualtric_data/20171120_qualtric_results_sample_dummy.csv"
dummy_design2_task_data = get_current_task_data(dummy_design2_qualtric_data_path)
dummy_design2_task_data
View(dummy_design2_task_data)
dummy_design2_task_data$LQ1
names(dummy_design2_task_data)
dummy_design2_task_data$LQ1
dummy_design2_task_data$LQ1
dummy_design2_task_data$LQ1
rm(list = ls())
# load supporting functions
# setwd("/home/fred/Field_Experiment_Human_Image_Classification/code")
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
#---------------------------------------------------------------------#
# read in qualtric output csv
dummy_design2_qualtric_data_path = "../qualtric_data/20171120_qualtric_results_sample_design2.csv"
dummy_design2_task_data = get_current_task_data(dummy_design2_qualtric_data_path)
View
View(dummy_design2_task_data)
names(dummy_design2_task_data)
dummy_design2_task_data$CCC_SQ1
dummy_design2_task_data[`Timer_CCC_S1_Page Submit`>0,]$CCC_SQ1
dummy_design2_task_data[`Timer_CCC_S1_Page Submit`>0,]
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.55.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.55.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.25, #!!! UPDATE
existing_path = existing_path)
View(worderIDs_task_status)
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.55, #!!! UPDATE
existing_path = existing_path)
View(worderIDs_task_status)
ALNODITI4PX9 %in% MTurk_worker_id
"ALNODITI4PX9" %in% MTurk_worker_id
"A1U5HJN8JXXLl7" %in% MTurk_worker_id
"A1U5HJN8JXXLl7" %in% MTurk_worker_id
"A34S6PZ81TW3CY"  %in% MTurk_worker_id
View(worderIDs_task_status)
"A1U5HJN8JXXLl7" in MTurk_worker_id
"A1U5HJN8JXXLl7" %in% MTurk_worker_id
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.55.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.55.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.55, #!!! UPDATE
existing_path = existing_path)
View(worderIDs_task_status)
"ADFEFH75I5YAM" %in% MTurk_worker_id
"A1MNJ1VJEZE8NY" %in% MTurk_worker_id
"A321CMGDXWPTA3" %in% MTurk_worker_id
"AXQAPTJ3L580P" in %in% MTurk_worker_id
"AXQAPTJ3L580P" %in% MTurk_worker_id
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.55.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.55.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.55, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
# existing file, be careful when you overwrite
existing_path = "../MTurk_ID_status/worker_status.csv"
# only run in the very first setup, don't touch afterwards
# DONT_USE_construct_frame_workerIDs_task_empty(custom_path = existing_path)
# this is the qualtric csv file you download from qualtric platform, containing survey results
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.55.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.55.csv" #!!! UPDATE
# construct contents for file update
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!!UPDATE
treatment_payrate = 0.55,
existing_path = existing_path) #!!! UPADTE
View(worderIDs_task_status)
existing_status = fread(existing_path)[,-c("V1")]
all_status = rbind(existing_status, worderIDs_task_status, fill=TRUE)
View(all_status)
View(all_status)
write.csv(x = all_status, file = existing_path)
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.10, #!!! UPDATE
existing_path = existing_path)
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.10, #!!! UPDATE
existing_path = existing_path)
View(worderIDs_task_status)
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
View(worderIDs_task_status )
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.10, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.10, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
View(worderIDs_task_status)
rm(list = ls())
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
# existing file, be careful when you overwrite
existing_path = "../MTurk_ID_status/worker_status.csv"
# only run in the very first setup, don't touch afterwards
# DONT_USE_construct_frame_workerIDs_task_empty(custom_path = existing_path)
# this is the qualtric csv file you download from qualtric platform, containing survey results
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# construct contents for file update
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!!UPDATE
treatment_payrate = 0.10,
existing_path = existing_path) #!!! UPADTE
# CAUTION!
# EXIT EXCEL FILE FIRST
# append content
existing_status = fread(existing_path)[,-c("V1")]
View(worderIDs_task_status)
existing_status = fread(existing_path)[,-c("V1")]
all_status = rbind(existing_status, worderIDs_task_status, fill=TRUE)
View(all_status)
write.csv(x = all_status, file = existing_path)
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.25,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.10, #!!! UPDATE
existing_path = existing_path)
View(worderIDs_task_status)
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.75,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.10, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.55.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.55.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.75,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.55, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171118_qualtric_results_order2_0.25.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171118_mturk_results_order2_0.25.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.75,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.25, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171118_qualtric_results_order2_0.40.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171118_mturk_results_order2_0.40.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.75,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.40, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.55.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.55.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.75,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.55, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
# existing file, be careful when you overwrite
existing_path = "../MTurk_ID_status/worker_status.csv"
# only run in the very first setup, don't touch afterwards
# DONT_USE_construct_frame_workerIDs_task_empty(custom_path = existing_path)
# this is the qualtric csv file you download from qualtric platform, containing survey results
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.55.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.55.csv" #!!! UPDATE
# construct contents for file update
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.75,
task_name = "order2", #!!!UPDATE
treatment_payrate = 0.55,
existing_path = existing_path) #!!! UPADTE
View(worderIDs_task_status)
existing_status = fread(existing_path)[,-c("V1")]
all_status = rbind(existing_status, worderIDs_task_status, fill=TRUE)
View(all_status)
write.csv(x = all_status, file = existing_path)
rm(list = ls())
# this is the qualtric csv file you download from qualtric platform, containing survey results
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.75,
task_name = "order2", #!!! UPDATE
treatment_payrate = 0.10, #!!! UPDATE
existing_path = existing_path)
# Who pass this HIT enough to be eligible for payment
eligbile_id = worderIDs_task_status[pay_or_not == 1, c("worker_id","worker_id_found_on_MTurk", "repeater")]
eligbile_id
rm(list = ls())
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
# load supporting functions
source(file = "design1_data_transformation_functions.r")
source(file = "design1_data_analysis_functions.r")
# existing file, be careful when you overwrite
existing_path = "../MTurk_ID_status/worker_status.csv"
# only run in the very first setup, don't touch afterwards
# DONT_USE_construct_frame_workerIDs_task_empty(custom_path = existing_path)
# this is the qualtric csv file you download from qualtric platform, containing survey results
qualtric_data_path = "../qualtric_data/20171119_qualtric_results_order2_0.10.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171119_mturk_results_order2_0.10.csv" #!!! UPDATE
# construct contents for file update
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
# adjust the payment threshold if 0.25 task accuracy is too low
worderIDs_task_status = construct_frame_worderIDs_task_status(current_task_data = current_task_data,
submitted_MTurk_ids = MTurk_worker_id,
allQ = allQ,
payment_accuracy_threshold = 0.75,
task_name = "order2", #!!!UPDATE
treatment_payrate = 0.10,
existing_path = existing_path) #!!! UPADTE
# CAUTION!
# EXIT EXCEL FILE FIRST
# append content
existing_status = fread(existing_path)[,-c("V1")]
all_status = rbind(existing_status, worderIDs_task_status, fill=TRUE)
View(all_status)
write.csv(x = all_status, file = existing_path)
