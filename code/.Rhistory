View(by_Session.table)
View(d)
summary(m2)
summary(mod.1)
summary(mod.0)
pred_data = data.frame(
group = "CCT",
round = "two"
)
predict(mod.0 , newdata = pred_data, se.fit = T)
summary(mod.0)
summary(glht(mod.0, vcov=vcovHC(mod.0),
linfct=rbind(
trial1=c(1,1,0,0,0,1,0,0,0,1,0,0)
)))
predict(mod.0 , newdata = pred_data, se.fit = T)
?predict
library(data.table)
library(sandwich)
library(stargazer)
d1 <- fread('./data/ps5_no1.csv')
d2 <- fread("./data/ps5_no2.csv")
table(is.na(d2$income))
length(d2$income)
table(d2$income)
nrow(d2)
length(d2$income)
d2$draft_number
table(d2$draft_number)
hist(d2$draft_number)
short_frame = d2[, .(num_obs = .N), keyby = draft_number]
short_frame
sn = read.csv("social_network.csv", header = T)
names(sn)
sn.tab = table(sn$Gender, sn$Site)
sn.tab
Chisqtest(d2$draft_number)
chisq.test(d2$draft_number)
?chisq.test
d2
rm(list = ls())
library(multcomp)
# load supporting functions
# setwd("/home/fred/Field_Experiment_Human_Image_Classification/code")
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
source(file = "design2_data_transformation_functions.r")
#source(file = "design2_data_analysis_functions.r")
#---------------------------------------------------------------------#
# read in data for analysis
by_HIT.table = fread("../modeling_data/design2_by_HIT.csv")
by_Session.table = fread("../modeling_data/design2_by_Session.csv")
#View(by_HIT.table)
#View(by_Session.table)
#---------------------------------------------------------------------#
# check attrition
attrition_by_group = lm(observed~group,data=by_HIT.table)
summary(attrition_by_group) #nothing significant
attrition_by_group_CQ1.1 = lm(observed~group,data=by_HIT.table[CQ1=="a lot less than half",])
summary(attrition_by_group_CQ1.1) # groupCCT 0.047434 *
attrition_by_group_CQ1.2 = lm(observed~group,data=by_HIT.table[CQ1=="around half",])
summary(attrition_by_group_CQ1.2) # nothing significant
attrition_by_group_CQ1.3 = lm(observed~group,data=by_HIT.table[CQ1=="a lot more than half",])
summary(attrition_by_group_CQ1.3) # groupCCT 0.00154 *
attrition_by_group_CQ2 = lm(observed~group*CQ2,data=by_HIT.table)
summary(attrition_by_group_CQ2) # nothing significant
attrition_by_group_CQ3.1 = lm(observed~group,data=by_HIT.table[CQ3=="Yes",])
summary(attrition_by_group_CQ3.1) # nothing significant
attrition_by_group_CQ3.2 = lm(observed~group,data=by_HIT.table[CQ3=="No",])
summary(attrition_by_group_CQ3.2) # nothing significant
attrition_by_group_CQ3.3 = lm(observed~group,data=by_HIT.table[CQ3=="Maybe",])
summary(attrition_by_group_CQ3.3) # nothing significant
attrition_by_group_CQ4.1 = lm(observed~group,data=by_HIT.table[CQ4=="0 to 10",])
summary(attrition_by_group_CQ4.1) # nothing significant
attrition_by_group_CQ4.2 = lm(observed~group,data=by_HIT.table[CQ4=="11 to 20",])
summary(attrition_by_group_CQ4.2) # nothing significant
attrition_by_group_CQ4.3 = lm(observed~group,data=by_HIT.table[CQ4=="21 to 30",])
summary(attrition_by_group_CQ4.3) # nothing significant
attrition_by_group_CQ4.4 = lm(observed~group,data=by_HIT.table[CQ4=="31 to 40",])
summary(attrition_by_group_CQ4.4) # nothing significant
attrition_by_group_CQ4.5 = lm(observed~group,data=by_HIT.table[CQ4=="41 or more",])
summary(attrition_by_group_CQ4.5) # nothing significant
attrition_by_group_CQ5.1 = lm(observed~group,data=by_HIT.table[CQ5=="Yes",])
summary(attrition_by_group_CQ5.1) # nothing significant
attrition_by_group_CQ5.2 = lm(observed~group,data=by_HIT.table[CQ5=="No",])
summary(attrition_by_group_CQ5.2) # nothing significant
attrition_by_group_CQ5.3 = lm(observed~group,data=by_HIT.table[CQ5=="Never heard of Linkedin",])
summary(attrition_by_group_CQ5.3) # nothing significant
#---------------------------------------------------------------------#
# check covariate balance (among non-attriters)
# CQ1 "What portion of your friends own pets?"
table(by_HIT.table$CQ1)
cov_check_CQ1.1 = lm(CQ1=="a lot less than half"~group, data=by_HIT.table)
cov_check_CQ1.2 = lm(CQ1=="around half"~group, data=by_HIT.table)
cov_check_CQ1.3 =lm(CQ1=="a lot more than half"~group, data=by_HIT.table)
summary(cov_check_CQ1.1) #nothing significant
summary(cov_check_CQ1.2) #nothing significant
summary(cov_check_CQ1.3) #groupTTT coef has marginally significant p-val 0.0267, meaning Turkers in TTT group are more likely to answer "around half" or "a lot less than half"
# CQ2 "Please rank your preferences to work with the following media:"
# Some numeric rank of "Images"
hist(by_HIT.table$CQ2, breaks = 0:4)
cov_check_CQ2 = lm(CQ2~group, data=by_HIT.table)
summary(cov_check_CQ2) #nothing significant
# CQ3 "Have your ever lived with any dogs in your household? If not, have you ever planned to own a dog?"
cov_check_CQ3.1 = lm(CQ3=="Yes"~group, data=by_HIT.table)
cov_check_CQ3.2 = lm(CQ3=="No"~group, data=by_HIT.table)
cov_check_CQ3.3 = lm(CQ3=="Maybe"~group, data=by_HIT.table)
summary(cov_check_CQ3.1) #nothing significant
summary(cov_check_CQ3.2) #nothing significant
summary(cov_check_CQ3.3) #nothing significant
# CQ4 "On average, how many tasks on Amazon Mechanical Turk do you complete every week?"
# "21 to 30"   "41 or more" "31 to 40"   "11 to 20"   "0 to 10"
cov_check_CQ4.1 = lm(CQ4=="0 to 10"~group, data=by_HIT.table)
cov_check_CQ4.2 = lm(CQ4=="11 to 20"~group, data=by_HIT.table)
cov_check_CQ4.3 = lm(CQ4=="21 to 30"~group, data=by_HIT.table)
cov_check_CQ4.4 = lm(CQ4=="31 to 40"~group, data=by_HIT.table)
cov_check_CQ4.5 = lm(CQ4=="41 or more"~group, data=by_HIT.table)
summary(cov_check_CQ4.1) #nothing significant
summary(cov_check_CQ4.2) #nothing significant
summary(cov_check_CQ4.3) #nothing significant
summary(cov_check_CQ4.4) #nothing significant
summary(cov_check_CQ4.5) #nothing significant
# CQ5  "Do you use Linkedin?"
# "Yes" "No" "Never heard of Linkedin"
cov_check_CQ5.1 = lm(CQ5=="Yes"~group, data=by_HIT.table)
cov_check_CQ5.2 = lm(CQ5=="No"~group, data=by_HIT.table)
cov_check_CQ5.3 = lm(CQ5=="Never heard of Linkedin"~group, data=by_HIT.table)
summary(cov_check_CQ5.1) #nothing significant
summary(cov_check_CQ5.2) #nothing significant
summary(cov_check_CQ5.3) #nothing significant
#---------------------------------------------------------------------#
# plot distribution (Brief EDA)
# specify model
unique(by_Session.table$CQ1)
mod.design2.cov = lm(round_accuracy ~ group * round + CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_Session.table)
summary(mod.1)
mod.design2.reduced = lm(round_accuracy ~ group * round,data=by_Session.table)
summary(mod.0)
unique(by_Session.table$CQ1)
mod.design2.cov = lm(round_accuracy ~ group * round + CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_Session.table)
summary(mod.mod.design2.cov)
mod.design2.reduced = lm(round_accuracy ~ group * round,data=by_Session.table)
summary(mod.mod.design2.reduced)
unique(by_Session.table$CQ1)
mod.design2.cov = lm(round_accuracy ~ group * round + CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_Session.table)
summary(mod.design2.cov)
mod.design2.reduced = lm(round_accuracy ~ group * round,data=by_Session.table)
summary(mod.design2.reduced)
summary(mod.design2.cov)
summary(mod.design2.reduced)
levels(by_Session.table$CQ2
)
unique(by_Session.table$CQ1)
by_Session.table$CQ1
levels(by_Session.table$CQ1)
unique(by_Session.table$CQ1)
factor(by_Session.table$CQ1. levels = c("a lot less than half",
"around half",
"a lot more than half"))
by_Session.table$CQ1 = factor(by_Session.table$CQ1, levels = c("a lot less than half", "around half", "a lot more than half"))
by_Session.table$CQ1
levels(by_Session.table$CQ2)
by_Session.table$CQ2
by_Session.table$CQ2 = as.numeric(by_Session.table$CQ2)
by_Session.table$CQ2
unique(by_Session.table$CQ3)
unique(by_Session.table$CQ4)
unique(by_Session.table$CQ5)
by_Session.table$group = factor(by_Session.table$group, levels = c("CCC", "CCT", "CTT", "TTT"))
by_Session.table$CQ1 = factor(by_Session.table$CQ1, levels = c("a lot less than half", "around half", "a lot more than half"))
by_Session.table$CQ2 = as.numeric(by_Session.table$CQ2)
by_Session.table$CQ3 = factor(by_Session.table$CQ3, levels = c("No", "Maybe", "Yes"))
by_Session.table$CQ4 = factor(by_Session.table$CQ4, levels = c("0 to 10", "11 to 20", "21 to 30", "31 to 40", "41 or more"))
by_Session.table$CQ5 = factor(by_Session.table$CQ5, levels = c("Never heard of Linkedin", "No", "Yes"))
View(by_Session.table)
by_Session.table$round_screener
by_Session.table$round_screener
by_Session.table$round_timespent
by_Session.table$round_accuracy
rm(list = ls())
library(multcomp)
# load supporting functions
# setwd("/home/fred/Field_Experiment_Human_Image_Classification/code")
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
source(file = "design2_data_transformation_functions.r")
#source(file = "design2_data_analysis_functions.r")
#---------------------------------------------------------------------#
# read in data for analysis
by_HIT.table = fread("../modeling_data/design2_by_HIT.csv")
by_Session.table = fread("../modeling_data/design2_by_Session.csv")
#View(by_HIT.table)
#View(by_Session.table)
#---------------------------------------------------------------------#
# Fix data type of imported csv
by_Session.table$group = factor(by_Session.table$group, levels = c("CCC", "CCT", "CTT", "TTT"))
by_Session.table$round = factor(by_Session.table$round, levels = c("one", "two", "three"))
by_Session.table$CQ1 = factor(by_Session.table$CQ1, levels = c("a lot less than half", "around half", "a lot more than half"))
by_Session.table$CQ2 = as.numeric(by_Session.table$CQ2)
by_Session.table$CQ3 = factor(by_Session.table$CQ3, levels = c("No", "Maybe", "Yes"))
by_Session.table$CQ4 = factor(by_Session.table$CQ4, levels = c("0 to 10", "11 to 20", "21 to 30", "31 to 40", "41 or more"))
by_Session.table$CQ5 = factor(by_Session.table$CQ5, levels = c("Never heard of Linkedin", "No", "Yes"))
by_Session.table$round_screener = as.numeric(by_Session.table$round_screener)
by_Session.table$round_timespent = as.numeric(by_Session.table$round_timespent)
by_Session.table$round_accuracy = as.numeric(by_Session.table$round_accuracy)
by_HIT.table$group = factor(by_HIT.table$group, levels = c("CCC", "CCT", "CTT", "TTT"))
by_HIT.table$CQ1 = factor(by_HIT.table$CQ1, levels = c("a lot less than half", "around half", "a lot more than half"))
by_HIT.table$CQ2 = as.numeric(by_HIT.table$CQ2)
by_HIT.table$CQ3 = factor(by_HIT.table$CQ3, levels = c("No", "Maybe", "Yes"))
by_HIT.table$CQ4 = factor(by_HIT.table$CQ4, levels = c("0 to 10", "11 to 20", "21 to 30", "31 to 40", "41 or more"))
by_HIT.table$CQ5 = factor(by_HIT.table$CQ5, levels = c("Never heard of Linkedin", "No", "Yes"))
#---------------------------------------------------------------------#
# check attrition
attrition_by_group = lm(observed~group,data=by_HIT.table)
summary(attrition_by_group) #nothing significant
attrition_by_group_CQ1.1 = lm(observed~group,data=by_HIT.table[CQ1=="a lot less than half",])
summary(attrition_by_group_CQ1.1) # groupCCT 0.047434 *
attrition_by_group_CQ1.2 = lm(observed~group,data=by_HIT.table[CQ1=="around half",])
summary(attrition_by_group_CQ1.2) # nothing significant
attrition_by_group_CQ1.3 = lm(observed~group,data=by_HIT.table[CQ1=="a lot more than half",])
summary(attrition_by_group_CQ1.3) # groupCCT 0.00154 *
attrition_by_group_CQ2 = lm(observed~group*CQ2,data=by_HIT.table)
summary(attrition_by_group_CQ2) # nothing significant
attrition_by_group_CQ3.1 = lm(observed~group,data=by_HIT.table[CQ3=="Yes",])
summary(attrition_by_group_CQ3.1) # nothing significant
attrition_by_group_CQ3.2 = lm(observed~group,data=by_HIT.table[CQ3=="No",])
summary(attrition_by_group_CQ3.2) # nothing significant
attrition_by_group_CQ3.3 = lm(observed~group,data=by_HIT.table[CQ3=="Maybe",])
summary(attrition_by_group_CQ3.3) # nothing significant
attrition_by_group_CQ4.1 = lm(observed~group,data=by_HIT.table[CQ4=="0 to 10",])
summary(attrition_by_group_CQ4.1) # nothing significant
attrition_by_group_CQ4.2 = lm(observed~group,data=by_HIT.table[CQ4=="11 to 20",])
summary(attrition_by_group_CQ4.2) # nothing significant
attrition_by_group_CQ4.3 = lm(observed~group,data=by_HIT.table[CQ4=="21 to 30",])
summary(attrition_by_group_CQ4.3) # nothing significant
attrition_by_group_CQ4.4 = lm(observed~group,data=by_HIT.table[CQ4=="31 to 40",])
summary(attrition_by_group_CQ4.4) # nothing significant
attrition_by_group_CQ4.5 = lm(observed~group,data=by_HIT.table[CQ4=="41 or more",])
summary(attrition_by_group_CQ4.5) # nothing significant
attrition_by_group_CQ5.1 = lm(observed~group,data=by_HIT.table[CQ5=="Yes",])
summary(attrition_by_group_CQ5.1) # nothing significant
attrition_by_group_CQ5.2 = lm(observed~group,data=by_HIT.table[CQ5=="No",])
summary(attrition_by_group_CQ5.2) # nothing significant
attrition_by_group_CQ5.3 = lm(observed~group,data=by_HIT.table[CQ5=="Never heard of Linkedin",])
summary(attrition_by_group_CQ5.3) # nothing significant
#---------------------------------------------------------------------#
# check covariate balance (among non-attriters)
# CQ1 "What portion of your friends own pets?"
table(by_HIT.table$CQ1)
cov_check_CQ1.1 = lm(CQ1=="a lot less than half"~group, data=by_HIT.table)
cov_check_CQ1.2 = lm(CQ1=="around half"~group, data=by_HIT.table)
cov_check_CQ1.3 =lm(CQ1=="a lot more than half"~group, data=by_HIT.table)
summary(cov_check_CQ1.1) #nothing significant
summary(cov_check_CQ1.2) #nothing significant
summary(cov_check_CQ1.3) #groupTTT coef has marginally significant p-val 0.0267, meaning Turkers in TTT group are more likely to answer "around half" or "a lot less than half"
# CQ2 "Please rank your preferences to work with the following media:"
# Some numeric rank of "Images"
hist(by_HIT.table$CQ2, breaks = 0:4)
cov_check_CQ2 = lm(CQ2~group, data=by_HIT.table)
summary(cov_check_CQ2) #nothing significant
# CQ3 "Have your ever lived with any dogs in your household? If not, have you ever planned to own a dog?"
cov_check_CQ3.1 = lm(CQ3=="Yes"~group, data=by_HIT.table)
cov_check_CQ3.2 = lm(CQ3=="No"~group, data=by_HIT.table)
cov_check_CQ3.3 = lm(CQ3=="Maybe"~group, data=by_HIT.table)
summary(cov_check_CQ3.1) #nothing significant
summary(cov_check_CQ3.2) #nothing significant
summary(cov_check_CQ3.3) #nothing significant
# CQ4 "On average, how many tasks on Amazon Mechanical Turk do you complete every week?"
# "21 to 30"   "41 or more" "31 to 40"   "11 to 20"   "0 to 10"
cov_check_CQ4.1 = lm(CQ4=="0 to 10"~group, data=by_HIT.table)
cov_check_CQ4.2 = lm(CQ4=="11 to 20"~group, data=by_HIT.table)
cov_check_CQ4.3 = lm(CQ4=="21 to 30"~group, data=by_HIT.table)
cov_check_CQ4.4 = lm(CQ4=="31 to 40"~group, data=by_HIT.table)
cov_check_CQ4.5 = lm(CQ4=="41 or more"~group, data=by_HIT.table)
summary(cov_check_CQ4.1) #nothing significant
summary(cov_check_CQ4.2) #nothing significant
summary(cov_check_CQ4.3) #nothing significant
summary(cov_check_CQ4.4) #nothing significant
summary(cov_check_CQ4.5) #nothing significant
# CQ5  "Do you use Linkedin?"
# "Yes" "No" "Never heard of Linkedin"
cov_check_CQ5.1 = lm(CQ5=="Yes"~group, data=by_HIT.table)
cov_check_CQ5.2 = lm(CQ5=="No"~group, data=by_HIT.table)
cov_check_CQ5.3 = lm(CQ5=="Never heard of Linkedin"~group, data=by_HIT.table)
summary(cov_check_CQ5.1) #nothing significant
summary(cov_check_CQ5.2) #nothing significant
summary(cov_check_CQ5.3) #nothing significant
mod.design2.reduced = lm(round_accuracy ~ group * round,data=by_Session.table)
summary(mod.design2.reduced)
mod.design2.reduced = lm(round_accuracy ~ group * round,data=by_Session.table)
summary(mod.design2.reduced)
names(by_HTI.table)
names(by_HIT.table)
mod.design2.averaged = lm(overall_accuracy ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.averaged)
-0.028493 + (0.007247 + 0.009432)/3
summary(by_HIT.table[group = CCC,overall_accuracy])
summary(by_HIT.table[group = "CCC",overall_accuracy])
summary(by_HIT.table[group == CCC,overall_accuracy])
summary(by_HIT.table[group == "CCC",overall_accuracy])
summary(by_HIT.table[group == "TTT",overall_accuracy])
summary(by_HIT.table[group == "CTT",overall_accuracy])
summary(by_HIT.table[group == "CCT",overall_accuracy])
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
source(file = "design2_data_transformation_functions.r")
#source(file = "design1_data_analysis_functions.r")
#---------------------------------------------------------------------#
# read in qualtric output csv
qualtric_data_path = "../qualtric_data/20171127_qualtric_results_design2_main.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171127_mturk_results_design2_main.csv" #!!! UPDATE
# load supporting functions
source(file = "design2_data_transformation_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
MTurk_worker_id = get_MTurk_worker_id(csv_path = MTurk_data_path)
#---------------------------------------------------------------------#
worker_perf.design2 = evaluate_worker_perf.design2(current_task_data, allQ.design2)
worker_perf.design2
worker_perf.design2[group == "CCC", accuracy]
summary(worker_perf.design2[group == "CCC", accuracy])
nrow(by_HIT.table)
nrow(by_HIT.table[is.na(overall_accuracy),])
setwd("F:/001_Learn_UCB/241_Experiments_and_Causality/final_project/Field_Experiment_Human_Image_Classification/code")
source(file = "design2_data_transformation_functions.r")
#source(file = "design1_data_analysis_functions.r")
#---------------------------------------------------------------------#
# read in qualtric output csv
qualtric_data_path = "../qualtric_data/20171127_qualtric_results_design2_main.csv" #!!! UPDATE
MTurk_data_path = "../MTurk_data/20171127_mturk_results_design2_main.csv" #!!! UPDATE
# load supporting functions
source(file = "design2_data_transformation_functions.r")
existing_path = "../MTurk_ID_status/worker_status.csv"
current_task_data = get_current_task_data(csv_path = qualtric_data_path)
current_task_data
tmp.dt.finished = current_task_data[toupper(Finished) == "TRUE", ]
tmp.dt.finished
tmp.dt.finished[CCC_TQ1 != "",]
dum = tmp.dt.finished[CCC_TQ1 != "",]
View(dum)
dum$`CCC_Signal_First Click`
dum$`CCT_signal_Click Count`
nrow(dum$`CCT_signal_Click Count`)
nrow(dum)
dum = tmp.dt.finished[CCT_TQ1 != "",]
nrow(dum)
dum$`CCC_Signal_Click Count`
dum$`CCT_Signal_Click Count`
dum$`CCT_signal_First Click`
dum$`CTT_signal_First Click`
dum$`TTT_signal_First Click`
dum = tmp.dt.finished[CTT_TQ1 != "",]
dum$`CCC_Signal_Click Count`
dum$`CTT_Signal_Click Count`
dum$`CTT_signal_First Click`
now(dum)
nrow(dum)
dum = tmp.dt.finished[TTT_TQ1 != "",]
nrow(dum)
worker_perf.design2 = evaluate_worker_perf.design2(current_task_data, allQ.design2)
worker_perf.design2
worker_perf.design2[group == "CCC", accuracy]
summary(worker_perf.design2[group == "CCC", accuracy])
summary(worker_perf.design2[group == "CCT", accuracy])
summary(worker_perf.design2[group == "CTT", accuracy])
summary(worker_perf.design2[group == "TTT", accuracy])
by_HIT.table[group == "CCC", overall_accuracy]
summary(by_HIT.table[group == "CCC", overall_accuracy])
summary(by_HIT.table[group == "CCT", overall_accuracy])
summary(by_HIT.table[group == "CTT", overall_accuracy])
summary(by_HIT.table[group == "TTT", overall_accuracy])
mod.design2.averaged = lm(overall_accuracy ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.averaged)
names(by_HIT.table)
mod.design2.averaged.total_timespent = lm(total_timespent ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.averaged.total_timespent)
mod.design2.averaged.total_timespent = lm(all_screeners_passed ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.averaged.all_screeners_passed)
mod.design2.averaged = lm(overall_accuracy ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.averaged)
mod.design2.averaged.total_timespent = lm(total_timespent ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.averaged.total_timespent)
mod.design2.averaged.all_screeners_passed = lm(all_screeners_passed ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.averaged.all_screeners_passed)
mod.design2.averaged = lm(overall_accuracy ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.averaged)
mod.design2.cov = lm(round_accuracy ~ group * round + CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_Session.table)
summary(mod.design2.cov)
mod.design2.by_Session.cov = lm(round_accuracy ~ group * round + CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_Session.table)
summary(mod.design2.cov)
mod.design2.by_Session = lm(round_accuracy ~ group * round,data=by_Session.table)
summary(mod.design2)
mod.design2.by_Session.cov = lm(round_accuracy ~ group * round + CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_Session.table)
summary(mod.design2.cov)
mod.design2.by_Session = lm(round_accuracy ~ group * round,data=by_Session.table)
summary(mod.design2.by_Session)
-0.028493 + (0.007247 + 0.009432)/3
mod.design2.by_HIT = lm(overall_accuracy ~ group, data = by_HIT.table)
summary(mod.design2.averaged)
mod.design2.by_HIT = lm(overall_accuracy ~ group, data = by_HIT.table)
summary(mod.design2.by_HIT)
# Any effect on Timespent?
mod.design2.by_HIT.total_timespent = lm(total_timespent ~ group, data = by_HIT.table)
summary(mod.design2.by_HIT.total_timespent)
# Any effect on Whether screeners are passed?
mod.design2.by_HIT.all_screeners_passed = lm(all_screeners_passed ~ group, data = by_HIT.table)
summary(mod.design2.by_HIT.all_screeners_passed)
# With covariates
# Any effect on Accuracy?
mod.design2.by_HIT.cov = lm(overall_accuracy ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.by_HIT.cov)
# Any effect on Timespent?
mod.design2.by_HIT.cov.total_timespent = lm(total_timespent ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.by_HIT.cov.total_timespent)
# Any effect on Whether screeners are passed?
mod.design2.by_HIT.cov.all_screeners_passed = lm(all_screeners_passed ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table)
summary(mod.design2.by_HIT.cov.all_screeners_passed)
summary(mod.design2.by_HIT)
-0.028493 + (0.007247 + 0.009432)/3
(-1/3)*(-0.001014) + (-1/3)*(-0.043137) -0.028493
mod.design2.by_Session.CCC = lm(round_accuracy ~ group=="CCC" * round,data=by_Session.table)
summary(mod.design2.by_Session.CCC)
group.CCC = as.numeric(by_Session.table$group == "CCC")
mod.design2.by_Session.CCC = lm(round_accuracy ~ group.CCC * round,data=by_Session.table)
summary(mod.design2.by_Session.CCC)
group.CCC = as.numeric(by_Session.table$group != "CCC")
mod.design2.by_Session.CCC = lm(round_accuracy ~ group.CCC * round,data=by_Session.table)
summary(mod.design2.by_Session.CCC)
1/3*(-0.001014) + 1/3*(-0.043137) + 1/3*(-0.028493) + 1/9*(-0.004955) + 1/9*(0.016377) + 1/9*(0.007247) + 1/9*(0.003791) + 1/9*(-0.004661) + 1/9*(0.009432)
mod.design2.by_Session = lm(round_accuracy ~ group * round,data=by_Session.table)
summary(mod.design2.by_Session)
mod = mod.design2.by_Session
b = mod$coefficients
b[2]
b[12]
1/3*b[2] + 1/3*b[3] + 1/3*b[4] + 1/9*b[5] + 1/9*b[8] + 1/9*b[9] + 1/9*b[10] + 1/9*b[11] + 1/9*b[12]
summary(mod.design2.by_Session)
summary(mod.design2.cov)
(-1/2)*(-0.001014) + (1/2)*(-0.043137) + (1/2)*(-0.028493) + (-1/2)*(-0.004955) + (1/2)*(0.016377) + (1/2)*(0.007247)
lm(overall_accuracy ~ group, data = by_HIT.table)
(-1/3)*(-0.001014) + (-1/3)*(-0.043137) + (-0.028493) + (-1/3)*(0.003791) + (-1/3)*(-0.004661) + 0.009432
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
trial1=c(0,0,0,0,1,0,0,0,0,0, 0, 0)
)))
mod.design2.by_Session.cov = lm(round_accuracy ~ group * round + CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_Session.table)
lmtest::coeftest(mod.design2.cov, vcov=vcovHC(mod.design2.by_Session )
mod.design2.by_Session.cov = lm(round_accuracy ~ group * round + CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_Session.table)
lmtest::coeftest(mod.design2.cov, vcov=vcovHC(mod.design2.by_Session))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
trial1=c(0,0,0,0,1,0,0,0,0,0, 0, 0)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"CCC R2-R1"=c(0,0,0,0,1,0,0,0,0,0, 0, 0)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"CCC R2-R1"=c(0,0,0,0,1,0,0,0,0,0, 0, 0),
"CCC R3-R1"=c(0,0,0,0,0,1,0,0,0,0, 0, 0),
"CCC R3-R2"=c(0,0,0,0,-1,1,0,0,0,0, 0, 0)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"CCT R2-R1"=c(0,0,0,0,1,0,1,0,0,0, 0, 0),
"CCT R3-R1"=c(0,0,0,0,0,1,0,0,0,1, 0, 0),
"CCT R3-R2"=c(0,0,0,0,-1,1,-1,0,0,1, 0, 0)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"CTT R2-R1"=c(0,0,0,0,1,0,0,1,0,0, 0, 0),
"CTT R3-R1"=c(0,0,0,0,0,1,0,0,0,0, 1, 0),
"CTT R3-R2"=c(0,0,0,0,-1,1,0,-1,0,0, 1, 0)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"CTT R2-R1"=c(0,0,0,0,1,0,0,0,1,0, 0, 0),
"CTT R3-R1"=c(0,0,0,0,0,1,0,0,0,0, 0, 1),
"CTT R3-R2"=c(0,0,0,0,-1,1,0,0,-1,0, 0, 1)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"T-C R1"=c(0,(-1/3),(-1/3),1,0,0,0,0,0,0, 0, 0)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"T-C R2"=c(0,(-1/2),(1/2),(1/2),0,0,(-1/2),(1/2),(1/2),0, 0, 0)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"T-C R3"=c(0,(-1/3),(-1/3),1,0,0,0,0,0,(-1/3), (-1/3), 1)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"TTT-CCC"=c(0,0,0,1,0,0,0,0,1/3,0, 0, 1/3)
)))
mod.design2.by_HIT = lm(overall_accuracy ~ group, data = by_HIT.table)
lmtest::coeftest(mod.design2.by_HIT, vcov=vcovHC(mod.design2.by_HIT))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"TTT-CCC"=c(0,0,0,1,0,0,0,0,1/3,0, 0, 1/3)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"TTT-CCC"=c(0,1/3,1/3,1/3,0,0,1/9,1/9,1/9,1/9, 1/9, 1/9)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"D_in_D R3"=c(0,0,0,0,0,0,-1,0,0,1, 0, 0)
)))
summary(glht(mod.design2.by_Session , vcov=vcovHC(mod.design2.by_Session),
linfct=rbind(
"D_in_D R2"=c(0,0,0,0,0,0,-1/2,1,0,0, 0, 0)
)))
