# sum S2 Y_11
Y11_S2 = by_Session.table[round=="two" & group=="TTT",round_accuracy]
# sum S3 Y_11
Y11_S3 = by_Session.table[round=="three" & (group=="TTT" | group=="CTT"),round_accuracy]
E_Y11 = (sum(Y11_S2)/0.25 + sum(Y11_S3)/0.50) /
(length(Y11_S2)/0.25 + length(Y11_S3)/0.50)
E_Y00.2 = (sum(Y00_S2)/0.50 + sum(Y00_S3)/0.25) /
(length(Y00_S2)/0.50 + length(Y00_S3)/0.25)
E_Y11_Y00 = E_Y11 - E_Y00.2
cat("\nEstimated Combined Immediate and Lagged Effect:", E_Y11_Y00)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .1) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution under constant treatment effect assumption \nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-1, 1)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .1) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-1, 1)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .1) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution under constant treatment effect assumption \nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.25, 0.25)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .1) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.25, 0.25)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .01) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution under constant treatment effect assumption \nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.25, 0.25)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .01) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.25, 0.25)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution under constant treatment effect assumption \nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution under constant treatment effect assumption \nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.125, 0.125)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.125, 0.125)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution under constant treatment effect assumption \nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 E[Y11-Y00]") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
# CIs of simulated ATE estimates
quantile(ATEs_0100.hat, c(0.025, 0.975))
quantile(ATEs_1100.hat, c(0.025, 0.975))
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution under constant treatment effect assumption \nDesign 2 Immediate Treatment Effect") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 Lagged+Immediate Treatment Effect") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution under constant \ntreatment effect assumption \nDesign 2 Immediate Treatment Effect") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 Lagged+Immediate Treatment Effect") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution assume constant ATE \nDesign 2 Immediate ATE") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 Lagged+Immediate ATE") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution (assume constant ATE) \nDesign 2 Immediate ATE") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 Lagged+Immediate ATE") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
hist.ATEs_0100.hat = qplot(ATEs_0100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y01_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y01-Y00]", y = "count", fill="accuracy") +
ggtitle(label="Sampling distribution (constant ATE) \nDesign 2 Immediate ATE") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
hist.ATEs_1100.hat =  qplot(ATEs_1100.hat, geom = "histogram") +
geom_vline(aes(xintercept = E_Y11_Y00), colour="red") +
geom_histogram(binwidth = .005) +
labs(x="Simulated E[Y11-Y00]", y = "count", fill="accuracy") +
ggtitle(label="\nDesign 2 Lagged+Immediate ATE") +
scale_x_continuous(limits = c(-0.15, 0.15)) +
theme_gray()
plot_grid(hist.ATEs_0100.hat,hist.ATEs_1100.hat)
cat("\nEstimated Confidence Interval of E[Y01-Y00]--immediate treatment effect:\n")
quantile(ATEs_0100.hat, c(0.025, 0.975))
cat("\nEstimated Confidence Interval of E[Y11-Y00]--combined immediate and lagged treatment effect:\n ")
quantile(ATEs_1100.hat, c(0.025, 0.975))
cat("\nHypothetical Y01 Table:")
head(Y00.table.filled,20)
cat("\nHypothetical Y01 Table:")
head(Y01.table.filled,20)
cat("\nHypothetical Y01 Table:")
head(Y11.table.filled,20)
attrition_by_group = lm(observed~group,data=by_HIT.table)
#summary(attrition_by_group) #nothing significant
attrition_by_group_CQ = lm(observed~group*CQ1 + group*CQ2 + group*CQ3 + group*CQ4 + group*CQ5,data=by_HIT.table)
#summary(attrition_by_group_CQ) #violations mostly related to CQ1
stargazer::stargazer(attrition_by_group, attrition_by_group_CQ,
type = "text", title = "Differential Attrition Check Design 2 Main", style = "default",
star.cutoffs = c(0.05, 0.01, 0.001),
model.names = F
)
attrition_by_CQ = lm(observed~CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_HIT.table)
summary(attrition_by_CQ)
by_HIT.table$observed
! by_HIT.table$observed
! by_HIT.table$observed
by_HIT.table$observed
as.numeric(by_HIT.table$observed == 0)
stargazer::stargazer(attrition_by_group, attrition_by_CQ, attrition_by_group_CQ,
type = "text", title = "Differential Attrition Check Design 2 Main", style = "default",
star.cutoffs = c(0.05, 0.01, 0.001),
model.names = F
)
by_HIT.table$attrited = as.numeric(by_HIT.table$observed == 0)
attrition_by_group = lm(attrited~group,data=by_HIT.table)
#summary(attrition_by_group) #nothing significant
attrition_by_CQ = lm(attrited~CQ1 + CQ2 + CQ3 + CQ4 + CQ5,data=by_HIT.table)
#summary(attrition_by_CQ) #violations mostly related to CQ1
attrition_by_group_CQ = lm(attrited~group*CQ1 + group*CQ2 + group*CQ3 + group*CQ4 + group*CQ5,data=by_HIT.table)
#summary(attrition_by_group_CQ) #violations mostly related to CQ1
stargazer::stargazer(attrition_by_group, attrition_by_CQ, attrition_by_group_CQ,
type = "text", title = "Differential Attrition Check Design 2 Main", style = "default",
star.cutoffs = c(0.05, 0.01, 0.001),
model.names = F
)
hist.design2.pilot.r1 = ggplot(by_Session.table_pilot[round=="one",], aes(round_accuracy)) +
geom_histogram(binwidth = .05) +
labs(x="HIT Accuracy", y = "count", fill="accuracy") +
ggtitle(label="Design2 Pilot S1") +
theme_gray()
hist.design2.pilot.r2 = ggplot(by_Session.table_pilot[round=="two",], aes(round_accuracy)) +
geom_histogram(binwidth = .05) +
labs(x="HIT Accuracy", y = "count", fill="accuracy") +
ggtitle(label="Design2 Pilot S2") +
theme_gray()
hist.design2.pilot.r3 = ggplot(by_Session.table_pilot[round=="three",], aes(round_accuracy)) +
geom_histogram(binwidth = .05) +
labs(x="HIT Accuracy", y = "count", fill="accuracy") +
ggtitle(label="Design2 Pilot S3") +
theme_gray()
plot_grid(hist.design2.pilot.r1,hist.design2.pilot.r2,hist.design2.pilot.r3, nrow = 1, ncol=3)
hist.design2pilot.r1 = ggplot(by_Session.table_pilot[round=="one",], aes(round_accuracy)) +
geom_histogram(binwidth = .05) +
labs(x="HIT Accuracy", y = "count", fill="accuracy") +
ggtitle(label="Design2 Pilot S1") +
theme_gray()
hist.design2pilot.r2 = ggplot(by_Session.table_pilot[round=="two",], aes(round_accuracy)) +
geom_histogram(binwidth = .05) +
labs(x="HIT Accuracy", y = "count", fill="accuracy") +
ggtitle(label="Design2 Pilot S2") +
theme_gray()
hist.design2pilot.r3 = ggplot(by_Session.table_pilot[round=="three",], aes(round_accuracy)) +
geom_histogram(binwidth = .05) +
labs(x="HIT Accuracy", y = "count", fill="accuracy") +
ggtitle(label="Design2 Pilot S3") +
theme_gray()
plot_grid(hist.design2pilot.r1,hist.design2pilot.r2,hist.design2pilot.r3, nrow = 1, ncol=3)
d2.summary = data.frame(Group=c("All","CCC","CCT","CTT","TTT","Attritiers" ),
Treatment=c("/","0.00","$0.05","$0.10","$0.15",""),
N=c(N.d2, N.ccc, N.cct, N.ctt, N.ttt,49),
TotalTime=c("10h 2min","/","/","/","/","/"),
AvgTimePerTask = c(paste(toString(round(avg_time_d2/60,3)),"min",sep=""),
paste(toString(round(avg_time_ccc/60,3)),"min",sep=""),
paste(toString(round(avg_time_cct/60,3)),"min",sep=""),
paste(toString(round(avg_time_ctt/60,3)),"min",sep=""),
paste(toString(round(avg_time_ttt/60,3)),"min",sep=""),
"/"
),
AccuracyMean=c(round(avg_accuracy_d2,3),
round(avg_accuracy_ccc,3),
round(avg_accuracy_cct,3),
round(avg_accuracy_ctt,3),
round(avg_accuracy_ttt,3),
"/"
),
AccuracySd=c(round(sd_accuracy_d2,3),
round(sd_accuracy_ccc,3),
round(sd_accuracy_cct,3),
round(sd_accuracy_ctt,3),
round(sd_accuracy_ttt,3),
"/"
))
knitr::kable(d2.summary, "markdown")
d2.pilot_summary = data.frame(Group=c("All","CCC","CCT","CTT","TTT","Attritiers" ),
Treatment=c("/","0.00","$0.05","$0.10","$0.15",""),
N=c(N.d2.pilot, N.ccc.pilot, N.cct.pilot, N.ctt.pilot, N.ttt.pilot,12),
TotalTime=c("20h 55min","/","/","/","/","/"),
AvgTimePerTask = c(paste(toString(round(avg_time_d2.pilot/60,3)),"min",sep=""),
paste(toString(round(avg_time_ccc.pilot/60,3)),"min",sep=""),
paste(toString(round(avg_time_cct.pilot/60,3)),"min",sep=""),
paste(toString(round(avg_time_ctt.pilot/60,3)),"min",sep=""),
paste(toString(round(avg_time_ttt.pilot/60,3)),"min",sep=""),
"/"
),
AccuracyMean=c(round(avg_accuracy_d2.pilot,3),
round(avg_accuracy_ccc.pilot,3),
round(avg_accuracy_cct.pilot,3),
round(avg_accuracy_ctt.pilot,3),
round(avg_accuracy_ttt.pilot,3),
"/"
),
AccuracySd=c(round(sd_accuracy_d2.pilot,3),
round(sd_accuracy_ccc.pilot,3),
round(sd_accuracy_cct.pilot,3),
round(sd_accuracy_ctt.pilot,3),
round(sd_accuracy_ttt.pilot,3),
"/"
))
knitr::kable(d2.pilot_summary, "markdown")
head("\nTreatment Condition Table:")
knitr::kable(head(assigned_treatment_condition_table,5), "markdown")
head("\nObserved Outcomes Table:")
knitr::kable(head(observed_outcomes_table, 5), "markdown")
# outcome table as is
cat("\nObserved Y00 Table:")
knitr::kable(head(Y00.table,5), "markdown")
cat("\nObserved Y01 Table:")
knitr::kable(head(Y01.table,5), "markdown")
cat("\nObserved Y11 Table:")
knitr::kable(head(Y11.table,5), "markdown")
cat("\nHypothetical Y01 Table:")
knitr::kable(head(Y00.table.filled,20), "markdown")
cat("\nHypothetical Y01 Table:")
knitr::kable(head(Y01.table.filled,20), "markdown")
cat("\nHypothetical Y01 Table:")
knitr::kable(head(Y11.table.filled,20), "markdown")
stargazer::stargazer(attrition_by_group, attrition_by_CQ, attrition_by_group_CQ,
type = "text", title = "Differential Attrition Check Design 2 Main", style = "default",
star.cutoffs = c(0.05, 0.01, 0.001),
model.names = F
)
22 + 15
# Model Overall -- Comparing only by group
# (looking at the entire HIT of 48 questions as a whole)
# Without covariates
# Any effect on Accuracy?
mod.design2.by_HIT_pilot = lm(overall_accuracy ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot = lmtest::coeftest(mod.design2.by_HIT_pilot, vcov=vcovHC(mod.design2.by_HIT_pilot))[ , "Std. Error"])
# Any effect on Timespent?
mod.design2.by_HIT_pilot.total_timespent = lm(total_timespent ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.total_timespent = lmtest::coeftest(mod.design2.by_HIT_pilot.total_timespent, vcov=vcovHC(mod.design2.by_HIT_pilot.total_timespent))[ , "Std. Error"])
# Any effect on Whether screeners are passed?
mod.design2.by_HIT_pilot.all_screeners_passed = lm(all_screeners_passed ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.all_screeners_passed = lmtest::coeftest(mod.design2.by_HIT_pilot.all_screeners_passed, vcov=vcovHC(mod.design2.by_HIT_pilot.all_screeners_passed))[ , "Std. Error"])
# With covariates
# Any effect on Accuracy?
mod.design2.by_HIT_pilot.cov = lm(overall_accuracy ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov = lmtest::coeftest(mod.design2.by_HIT_pilot.cov,
vcov=vcovHC(mod.design2.by_HIT_pilot.cov, type = "HC1"))[,"Std. Error"])
# Any effect on Timespent?
mod.design2.by_HIT_pilot.cov.total_timespent = lm(total_timespent ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov.total_timespent = lmtest::coeftest(mod.design2.by_HIT_pilot.cov.total_timespent, vcov=vcovHC(mod.design2.by_HIT_pilot.cov.total_timespent, type = "HC1"))[ , "Std. Error"])
# Any effect on Whether screeners are passed?
mod.design2.by_HIT_pilot.cov.all_screeners_passed = lm(all_screeners_passed ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov.all_screeners_passed = lmtest::coeftest(mod.design2.by_HIT_pilot.cov.all_screeners_passed, vcov=vcovHC(mod.design2.by_HIT_pilot.cov.all_screeners_passed, type = "HC1"))[ , "Std. Error"])
stargazer::stargazer(mod.design2.by_HIT, mod.design2.by_HIT.cov,
glm.mod.design2.by_HIT, glm.mod.design2.by_HIT.cov,
mod.design2.by_HIT.total_timespent, mod.design2.by_HIT.cov.total_timespent,
type = "text", title = "Design 2 Main experiment ATE Estimation", style = "default",
se = list(se.design2.by_HIT, se.design2.by_HIT.cov,
se.glm.design2.by_HIT, se.glm.design2.by_HIT.cov,
se.design2.by_HIT.total_timespent, se.design2.by_HIT.cov.total_timespent),
star.cutoffs = c(0.05, 0.01, 0.001),
column.labels = c("simple","full","simple","full","simple","full"),
model.names = T
)
cat("\nModel 5: simple: ATE being in group CCT rather than group CCC:")
get_ate_se_robustci_d2_timespent(mod.design2.by_HIT.total_timespent,2)
cat("\nModel 6: covariate controls: ATE being in group CCT rather than group CCC:")
get_ate_se_robustci_d2_timespent(mod.design2.by_HIT.cov.total_timespent,2)
cat("\nModel 5: simple: ATE being in group CTT rather than group CCC:")
get_ate_se_robustci_d2_timespent(mod.design2.by_HIT.total_timespent,3)
cat("\nModel 6: covariate controls: ATE being in group CTT rather than group CCC:")
get_ate_se_robustci_d2_timespent(mod.design2.by_HIT.cov.total_timespent,3)
cat("\nModel 5: simple: ATE being in group TTT rather than group CCC:")
get_ate_se_robustci_d2_timespent(mod.design2.by_HIT.total_timespent,4)
cat("\nModel 6: covariate controls: ATE being in group TTT rather than group CCC:")
get_ate_se_robustci_d2_timespent(mod.design2.by_HIT.cov.total_timespent,4)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
# Model Overall -- Comparing only by group
# (looking at the entire HIT of 48 questions as a whole)
# Without covariates
# Any effect on Accuracy?
mod.design2.by_HIT_pilot = lm(overall_accuracy ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot = lmtest::coeftest(mod.design2.by_HIT_pilot, vcov=vcovHC(mod.design2.by_HIT_pilot))[ , "Std. Error"])
# Any effect on Timespent?
mod.design2.by_HIT_pilot.total_timespent = lm(total_timespent ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.total_timespent = lmtest::coeftest(mod.design2.by_HIT_pilot.total_timespent, vcov=vcovHC(mod.design2.by_HIT_pilot.total_timespent))[ , "Std. Error"])
# Any effect on Whether screeners are passed?
mod.design2.by_HIT_pilot.all_screeners_passed = lm(all_screeners_passed ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.all_screeners_passed = lmtest::coeftest(mod.design2.by_HIT_pilot.all_screeners_passed, vcov=vcovHC(mod.design2.by_HIT_pilot.all_screeners_passed))[ , "Std. Error"])
# With covariates
# Any effect on Accuracy?
mod.design2.by_HIT_pilot.cov = lm(overall_accuracy ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov = lmtest::coeftest(mod.design2.by_HIT_pilot.cov,
vcov=vcovHC(mod.design2.by_HIT_pilot.cov, type = "HC1"))[,"Std. Error"])
# Any effect on Timespent?
mod.design2.by_HIT_pilot.cov.total_timespent = lm(total_timespent ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov.total_timespent = lmtest::coeftest(mod.design2.by_HIT_pilot.cov.total_timespent, vcov=vcovHC(mod.design2.by_HIT_pilot.cov.total_timespent, type = "HC1"))[ , "Std. Error"])
# Any effect on Whether screeners are passed?
mod.design2.by_HIT_pilot.cov.all_screeners_passed = lm(all_screeners_passed ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov.all_screeners_passed = lmtest::coeftest(mod.design2.by_HIT_pilot.cov.all_screeners_passed, vcov=vcovHC(mod.design2.by_HIT_pilot.cov.all_screeners_passed, type = "HC1"))[ , "Std. Error"])
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
# Model Overall -- Comparing only by group
# (looking at the entire HIT of 48 questions as a whole)
# Without covariates
# Any effect on Accuracy?
mod.design2.by_HIT_pilot = lm(overall_accuracy ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot = lmtest::coeftest(mod.design2.by_HIT_pilot, vcov=vcovHC(mod.design2.by_HIT_pilot, type = "HC1"))[ , "Std. Error"])
# Any effect on Timespent?
mod.design2.by_HIT_pilot.total_timespent = lm(total_timespent ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.total_timespent = lmtest::coeftest(mod.design2.by_HIT_pilot.total_timespent, vcov=vcovHC(mod.design2.by_HIT_pilot.total_timespent, type = "HC1"))[ , "Std. Error"])
# Any effect on Whether screeners are passed?
mod.design2.by_HIT_pilot.all_screeners_passed = lm(all_screeners_passed ~ group, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.all_screeners_passed = lmtest::coeftest(mod.design2.by_HIT_pilot.all_screeners_passed, vcov=vcovHC(mod.design2.by_HIT_pilot.all_screeners_passed, type = "HC1"))[ , "Std. Error"])
# With covariates
# Any effect on Accuracy?
mod.design2.by_HIT_pilot.cov = lm(overall_accuracy ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov = lmtest::coeftest(mod.design2.by_HIT_pilot.cov,
vcov=vcovHC(mod.design2.by_HIT_pilot.cov, type = "HC1"))[,"Std. Error"])
# Any effect on Timespent?
mod.design2.by_HIT_pilot.cov.total_timespent = lm(total_timespent ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov.total_timespent = lmtest::coeftest(mod.design2.by_HIT_pilot.cov.total_timespent, vcov=vcovHC(mod.design2.by_HIT_pilot.cov.total_timespent, type = "HC1"))[ , "Std. Error"])
# Any effect on Whether screeners are passed?
mod.design2.by_HIT_pilot.cov.all_screeners_passed = lm(all_screeners_passed ~ group + CQ1 + CQ2 + CQ3 + CQ4 + CQ5, data = by_HIT.table_pilot)
(se.design2.by_HIT_pilot.cov.all_screeners_passed = lmtest::coeftest(mod.design2.by_HIT_pilot.cov.all_screeners_passed, vcov=vcovHC(mod.design2.by_HIT_pilot.cov.all_screeners_passed, type = "HC1"))[ , "Std. Error"])
stargazer::stargazer(mod.design2.by_HIT_pilot, mod.design2.by_HIT_pilot.cov,
mod.design2.by_HIT_pilot.total_timespent, mod.design2.by_HIT_pilot.cov.total_timespent,
mod.design2.by_HIT_pilot.all_screeners_passed, mod.design2.by_HIT_pilot.cov.all_screeners_passed,
type = "text", title = "Design 2 Pilot ATE Estimation", style = "default",
se = list(se.design2.by_HIT_pilot, se.design2.by_HIT_pilot.cov,
se.design2.by_HIT_pilot.total_timespent, se.design2.by_HIT_pilot.cov.total_timespent,
se.design2.by_HIT_pilot.all_screeners_passed,se.design2.by_HIT_pilot.cov.all_screeners_passed),
star.cutoffs = c(0.05, 0.01, 0.001),
column.labels = c("simple","full","simple","full","simple","full"),
model.names = T
)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,3)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,4)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,3)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,4)
?vcovHC
lmtest::coeftest(mod.design2.by_HIT_pilot.cov,
vcov=vcovHC(mod.design2.by_HIT_pilot.cov, type = "HC1"))[,"Std. Error"]
summary(mod.design2.by_HIT_pilot.cov)
se.design2.by_HIT_pilot.cov.total_timespent
se.design2.by_HIT_pilot.cov.total_timespent
se.design2.by_HIT_pilot.cov
mode = mod.design2.by_HIT_pilot.cov
mod = mod.design2.by_HIT_pilot.cov
get_ate_se_robustci = function (mod, coef_idx) {
ate = mod$coefficients[coef_idx]
robust.se = lmtest::coeftest(mod, vcov = vcovHC(mod, type = "HC1"))[coef_idx,2]
robust.p = lmtest::coeftest(mod, vcov = vcovHC(mod, type = "HC1"))[coef_idx,4]
df = summary(mod)$df[2]
t.stat = qt(p = 0.975, df = df, lower.tail = TRUE)
robust.ci = c(ate-t.stat*robust.se, ate+t.stat*robust.se )
cat("estimated average causal effect = ", ate,
"\nrobust standard error = ", robust.se,
"\n95% confidence interval = ", robust.ci,
"\np-value = ",robust.p)
}
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,2)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,3)
cat("\nDesign 2 Pilot, Simple Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot,4)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CCT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,2)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group CTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,3)
cat("\nDesign 2 Pilot, Full Model : Effect of being in group TTT rather than CCC on accuracy")
get_ate_se_robustci(mod.design2.by_HIT_pilot.cov,4)
